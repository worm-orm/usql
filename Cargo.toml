[workspace]

resolver = "2"

members = [
  "usql-core",
  "usql-builder",
  "usql-migrate",
  "usql-quick",
  "usql",
  "usql-macros",
  "usql-sqlite",
  # "usql-libsql",
  "usql-postgres",
  "usql-any",
  "usql-value",
  "usql-util",
  "usql-cli", "usql-project",
]


[workspace.dependencies]
futures-core = { version = "0.3", default-features = false, features = [
  "alloc",
] }
pin-project-lite = { version = "0.2" }
deadpool = { version = "0.12" }
async-lock = { version = "3" }
uuid = { version = "1", default-features = false, features = ["v4"] }
chrono = { version = "0.4", default-features = false, features = ["alloc"] }
async-stream = { version = "0.3" }
serde_json = { version = "1", default-features = false, features = ["alloc"] }


[profile.release]
codegen-units = 1           # reduces binary size by ~2%
debug = "full"              # No one needs an undebuggable release binary
lto = true                  # reduces binary size by ~14%
opt-level = "s"             # reduces binary size by ~25%
panic = "abort"             # reduces binary size by ~50% in combination with -Zbuild-std-features=panic_immediate_abort
split-debuginfo = "packed"  # generates a separate *.dwp/*.dSYM so the binary can get stripped
strip = "symbols"           # See split-debuginfo - allows us to drop the size by ~65%
incremental = true          # Improves re-compile times

[profile.bench]
codegen-units = 16          # Make compiling criterion faster (16 is the default, but profile.release sets it to 1)
lto = "thin"                # Similarly, speed up linking by a ton
